<!-- Following repositories are required (in maven settings.xml) to resolve 
	all the dependencies used in this POM. Apache Repo - http://repository.jboss.org/nexus/content/groups/public/ 
	JBoss Repo1 (MUST) - http://repository.jboss.org/nexus/content/groups/public/ 
	JBoss Repo2 - https://repository.jboss.org/nexus/content/groups/public-jboss/ 
	Backup Maven Repo - http://repo1.maven.org/maven2 -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.acn.tqs</groupId>
	<artifactId>notificationservice</artifactId>
	<name>NotificationService</name>
	<description>Notification Queue Serve</description>
	<packaging>war</packaging>
	<version>1.0</version>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- JBoss dependency versions -->
		<version.org.jboss.as.plugins.maven.plugin>7.1.1.Final</version.org.jboss.as.plugins.maven.plugin>

		<!-- maven 3.0.4 plugin versions -->
		<version.compiler.plugin>3.0</version.compiler.plugin>
		<version.war.plugin>2.3</version.war.plugin>

		<!-- maven-compiler-plugin. TQS can be compiled on java 1.6 or above -->
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
	</properties>

	<!-- Importing parent JBoss AS pom, as a container -->
	<!-- <dependencyManagement> 
			<dependencies> 
				<dependency> 
					<groupId>org.jboss.as</groupId> 
					<artifactId>jboss-as-parent</artifactId> 
					<version>${version.org.jboss.as.plugins.maven.plugin}</version> 
					<type>pom</type> 
					<scope>import</scope> 
				</dependency> 
			</dependencies> 
		</dependencyManagement> -->

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.4</version>
			<scope>test</scope>
		</dependency>
		<!-- mysql connected is provided within JBoss module -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.20</version>
			<scope>provided</scope>
		</dependency>
		<!-- Import the Servlet API, we use provided scope as the API is included 
			in JBoss AS 7 -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-core</artifactId>
			<version>5.1.2.FINAL</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>4.0.1.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate.common</groupId>
			<artifactId>hibernate-commons-annotations</artifactId>
			<version>4.0.1.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.15.0-GA</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>transaction-api</artifactId>
			<version>1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-configuration</groupId>
			<artifactId>commons-configuration</artifactId>
			<version>1.6</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>gensrc</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<!-- To only execute code generation with invoking clean or install, 
					use mvn jaxb2:generate. You can provide profile by -P<profile-name> if you 
					have this plug-in configured differently in various profiles -->
				<plugins>
					<plugin>
						<groupId>org.jvnet.jaxb2.maven2</groupId>
						<artifactId>maven-jaxb2-plugin</artifactId>
						<version>0.8.2</version>
						<executions>
							<execution>
								<id>default-cli</id>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<plugins>
										<plugin>
											<groupId>org.jvnet.jaxb2_commons</groupId>
											<artifactId>basic</artifactId>
											<version>0.4.1.4</version>
											<exclusions>
												<exclusion>
													<groupId>com.sun.xml.bind</groupId>
													<artifactId>jaxb-impl</artifactId>
												</exclusion>
												<exclusion>
													<groupId>com.sun.xml.bind</groupId>
													<artifactId>jaxb-xjc</artifactId>
												</exclusion>
											</exclusions>
										</plugin>
									</plugins>
									<schemaDirectory>src/main/resources/xsd</schemaDirectory>
									<bindingDirectory>src/main/java/com/manu/demo/xjb</bindingDirectory>
									<verbose>true</verbose>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<finalName>notificationservice</finalName>
		<plugins>
			<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation 
				processors -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.compiler.plugin}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<!-- This maven-war-plugin creates a MANIFEST.mf entry with dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${version.war.plugin}</version>
				<configuration>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<!-- failOnMissingWebXml>false</failOnMissingWebXml -->
					<archive>
						<manifestEntries>
							<Dependencies>com.mysql</Dependencies>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<!-- JBoss AS plugin to deploy war -->
			<!-- 
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>${version.org.jboss.as.plugins.maven.plugin}</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			-->
		</plugins>
	</build>

</project>