<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<index version="1.7.16.v20130804-1241">
    <entry createBy="dependency" isSeed="true" qualifiedName="parallel.test.message.Request" stemName="de_parallel.test.message.Request" text="Request"/>
    <entry createBy="inheritance" isSeed="true" qualifiedName="parallel.test.message.Request" stemName="in_parallel.test.message.Request" text="Request"/>
    <entry createBy="dependency" isSeed="true" qualifiedName="parallel.test.message.Response" stemName="de_parallel.test.message.Response" text="Response"/>
    <entry createBy="inheritance" isSeed="true" qualifiedName="parallel.test.message.Response" stemName="in_parallel.test.message.Response" text="Response"/>
    <entry createBy="dependency" isSeed="true" qualifiedName="parallel.test.task.Task" stemName="de_parallel.test.task.Task" text="Task"/>
    <entry createBy="inheritance" isSeed="true" qualifiedName="parallel.test.task.Task" stemName="in_parallel.test.task.Task" text="Task"/>
    <entry createBy="dependency" isSeed="true" qualifiedName="parallel.test.broker.TaskManager" stemName="de_parallel.test.broker.TaskManager" text="TaskManager"/>
    <entry createBy="dependency" isSeed="true" qualifiedName="parallel.test.task.URHTask" stemName="de_parallel.test.task.URHTask" text="URHTask"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.pool.AuthThread" stemName="pa_parallel.test.pool" text="AuthThread"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.pool.AuthThreadFactory" stemName="de_parallel.test.broker.TaskManager" text="AuthThreadFactory"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.pool.AuthThreadFactory" stemName="pa_parallel.test.pool" text="AuthThreadFactory"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.pool.AuthThreadPoolExecutor" stemName="de_parallel.test.broker.TaskManager" text="AuthThreadPoolExecutor"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.pool.AuthThreadPoolExecutor" stemName="pa_parallel.test.pool" text="AuthThreadPoolExecutor"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.ErrorResponse" stemName="de_parallel.test.broker.TaskManager" text="ErrorResponse"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.ErrorResponse" stemName="de_parallel.test.message.Response" text="ErrorResponse"/>
    <entry createBy="inheritance" isSeed="false" qualifiedName="parallel.test.message.ErrorResponse" stemName="in_parallel.test.message.Response" text="ErrorResponse"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.message.ErrorResponse" stemName="pa_parallel.test.message" text="ErrorResponse"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.MBPRequest" stemName="de_parallel.test.broker.TaskManager" text="MBPRequest"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.MBPRequest" stemName="de_parallel.test.message.Request" text="MBPRequest"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.MBPRequest" stemName="de_parallel.test.task.Task" text="MBPRequest"/>
    <entry createBy="inheritance" isSeed="false" qualifiedName="parallel.test.message.MBPRequest" stemName="in_parallel.test.message.Request" text="MBPRequest"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.message.MBPRequest" stemName="pa_parallel.test.message" text="MBPRequest"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.MBPResponse" stemName="de_parallel.test.broker.TaskManager" text="MBPResponse"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.MBPResponse" stemName="de_parallel.test.message.Response" text="MBPResponse"/>
    <entry createBy="inheritance" isSeed="false" qualifiedName="parallel.test.message.MBPResponse" stemName="in_parallel.test.message.Response" text="MBPResponse"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.message.MBPResponse" stemName="pa_parallel.test.message" text="MBPResponse"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.task.MBPTask" stemName="de_parallel.test.message.Request" text="MBPTask"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.task.MBPTask" stemName="de_parallel.test.message.Response" text="MBPTask"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.task.MBPTask" stemName="de_parallel.test.task.Task" text="MBPTask"/>
    <entry createBy="inheritance" isSeed="false" qualifiedName="parallel.test.task.MBPTask" stemName="in_parallel.test.task.Task" text="MBPTask"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.task.MBPTask" stemName="pa_parallel.test.task" text="MBPTask"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.Request" stemName="de_parallel.test.broker.TaskManager" text="Request"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.Request" stemName="de_parallel.test.task.Task" text="Request"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.Request" stemName="de_parallel.test.task.URHTask" text="Request"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.message.Request" stemName="pa_parallel.test.message" text="Request"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.Response" stemName="de_parallel.test.broker.TaskManager" text="Response"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.Response" stemName="de_parallel.test.task.Task" text="Response"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.Response" stemName="de_parallel.test.task.URHTask" text="Response"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.message.Response" stemName="pa_parallel.test.message" text="Response"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.task.Task" stemName="de_parallel.test.broker.TaskManager" text="Task"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.task.Task" stemName="de_parallel.test.message.Request" text="Task"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.task.Task" stemName="de_parallel.test.message.Response" text="Task"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.task.Task" stemName="de_parallel.test.task.URHTask" text="Task"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.task.Task" stemName="pa_parallel.test.task" text="Task"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.task.exception.TaskExecutionException" stemName="de_parallel.test.task.URHTask" text="TaskExecutionException"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.broker.TaskManager" stemName="de_parallel.test.message.Request" text="TaskManager"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.broker.TaskManager" stemName="de_parallel.test.message.Response" text="TaskManager"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.broker.TaskManager" stemName="de_parallel.test.task.Task" text="TaskManager"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.URHRequest" stemName="de_parallel.test.broker.TaskManager" text="URHRequest"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.URHRequest" stemName="de_parallel.test.message.Request" text="URHRequest"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.URHRequest" stemName="de_parallel.test.task.Task" text="URHRequest"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.URHRequest" stemName="de_parallel.test.task.URHTask" text="URHRequest"/>
    <entry createBy="inheritance" isSeed="false" qualifiedName="parallel.test.message.URHRequest" stemName="in_parallel.test.message.Request" text="URHRequest"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.message.URHRequest" stemName="pa_parallel.test.message" text="URHRequest"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.URHResponse" stemName="de_parallel.test.broker.TaskManager" text="URHResponse"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.URHResponse" stemName="de_parallel.test.message.Response" text="URHResponse"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.URHResponse" stemName="de_parallel.test.task.URHTask" text="URHResponse"/>
    <entry createBy="inheritance" isSeed="false" qualifiedName="parallel.test.message.URHResponse" stemName="in_parallel.test.message.Response" text="URHResponse"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.message.URHResponse" stemName="pa_parallel.test.message" text="URHResponse"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.task.URHTask" stemName="de_parallel.test.message.Request" text="URHTask"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.task.URHTask" stemName="de_parallel.test.message.Response" text="URHTask"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.task.URHTask" stemName="de_parallel.test.task.Task" text="URHTask"/>
    <entry createBy="inheritance" isSeed="false" qualifiedName="parallel.test.task.URHTask" stemName="in_parallel.test.task.Task" text="URHTask"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.task.URHTask" stemName="pa_parallel.test.task" text="URHTask"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.UUSDRequest" stemName="de_parallel.test.broker.TaskManager" text="UUSDRequest"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.UUSDRequest" stemName="de_parallel.test.message.Request" text="UUSDRequest"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.UUSDRequest" stemName="de_parallel.test.task.Task" text="UUSDRequest"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.UUSDRequest" stemName="de_parallel.test.task.URHTask" text="UUSDRequest"/>
    <entry createBy="inheritance" isSeed="false" qualifiedName="parallel.test.message.UUSDRequest" stemName="in_parallel.test.message.Request" text="UUSDRequest"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.message.UUSDRequest" stemName="pa_parallel.test.message" text="UUSDRequest"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.message.UUSDResponse" stemName="de_parallel.test.message.Response" text="UUSDResponse"/>
    <entry createBy="inheritance" isSeed="false" qualifiedName="parallel.test.message.UUSDResponse" stemName="in_parallel.test.message.Response" text="UUSDResponse"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.message.UUSDResponse" stemName="pa_parallel.test.message" text="UUSDResponse"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.task.UUSDTask" stemName="de_parallel.test.message.Request" text="UUSDTask"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.task.UUSDTask" stemName="de_parallel.test.message.Response" text="UUSDTask"/>
    <entry createBy="dependency" isSeed="false" qualifiedName="parallel.test.task.UUSDTask" stemName="de_parallel.test.task.Task" text="UUSDTask"/>
    <entry createBy="inheritance" isSeed="false" qualifiedName="parallel.test.task.UUSDTask" stemName="in_parallel.test.task.Task" text="UUSDTask"/>
    <entry createBy="package" isSeed="false" qualifiedName="parallel.test.task.UUSDTask" stemName="pa_parallel.test.task" text="UUSDTask"/>
</index>
